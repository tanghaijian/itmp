<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.pioneeruniverse.dev.dao.mybatis.TblRequirementInfoMapper">
  <resultMap id="BaseResultMap" type="cn.pioneeruniverse.dev.entity.TblRequirementInfo">
    <id column="ID" jdbcType="BIGINT" property="id" />   
    <result column="REQUIREMENT_NAME" jdbcType="VARCHAR" property="requirementName"/>
	<result column="REQUIREMENT_CODE" jdbcType="VARCHAR" property="requirementCode"/>
	<result column="REQUIREMENT_STATUS" jdbcType="VARCHAR" property="requirementStatus"/>
	<result column="REQUIREMENT_SOURCE" jdbcType="VARCHAR" property="requirementSource"/>
	<result column="REQUIREMENT_TYPE" jdbcType="VARCHAR" property="requirementType"/>
	<result column="APPLY_USER_ID" jdbcType="BIGINT" property="applyUserId"/>
	<result column="APPLY_DEPT_ID" jdbcType="BIGINT" property="applyDeptId"/>
	<result column="DEVELOPMENT_MANAGE_USER_ID" jdbcType="BIGINT" property="developmentManageUserId"/>
	<result column="DEVELOPMENT_DEPT_ID" jdbcType="BIGINT" property="developmentDeptId"/>
	<result column="REQUIREMENT_MANAGE_USER_ID" jdbcType="BIGINT" property="requirementManageUserId"/>
	<result column="REQUIREMENT_ACCEPTANCE_USER_ID" jdbcType="BIGINT" property="requirementAcceptanceUserId"/>
	<result column="REQUIREMENT_OVERVIEW" jdbcType="VARCHAR" property="requirementOverview"/>
	<result column="REQUIREMENT_PRIORITY" jdbcType="VARCHAR" property="requirementPriority"/>
	<result column="REQUIREMENT_PLAN" jdbcType="VARCHAR" property="requirementPlan"/>
	<result column="EXPECT_ONLINE_DATE" jdbcType="DATE" property="expectOnlineDate"/>
	<result column="PLAN_ONLINE_DATE" jdbcType="DATE" property="planOnlineDate"/>
	<result column="ACTUAL_ONLINE_DATE" jdbcType="DATE" property="actualOnlineDate"/>
	<result column="PLAN_INTEGRATION_TEST_DATE" jdbcType="DATE" property="planIntegrationTestDate"/>
	<result column="ACTUAL_INTEGRATION_TEST_DATE" jdbcType="DATE" property="actualIntegrationTestDate"/>
	<result column="OPEN_DATE" jdbcType="DATE" property="openDate"/>
	<result column="IMPORTANT_REQUIREMENT_STATUS" jdbcType="VARCHAR" property="importantRequirementStatus"/>
	<result column="IMPORTANT_REQUIREMENT_DELAY_STATUS" jdbcType="VARCHAR" property="importantRequirementDelayStatus"/>
	<result column="IMPORTANT_REQUIREMENT_TYPE" jdbcType="VARCHAR" property="importantRequirementType"/>
	<result column="IMPORTANT_REQUIREMENT_ONLINE_QUARTER" jdbcType="VARCHAR" property="importantRequirementOnlineQuarter"/>
	<result column="IMPORTANT_REQUIREMENT_DELAY_REASON" jdbcType="VARCHAR" property="importantRequirementDelayReason"/>
	<result column="DIRECT_INCOME" jdbcType="TINYINT" property="directIncome"/>
	<result column="FORWARD_INCOME" jdbcType="TINYINT" property="forwardIncome"/>
	<result column="RECESSIVE_INCOME" jdbcType="TINYINT" property="recessiveIncome"/>
	<result column="DIRECT_COST_REDUCTION" jdbcType="TINYINT" property="directCostReduction"/>
	<result column="FORWARD_COST_REDUCTION" jdbcType="TINYINT" property="forwardCostReduction"/>
	<result column="ANTICIPATED_INCOME" jdbcType="VARCHAR" property="anticipatedIncome"/>
	<result column="ESTIMATE_COST" jdbcType="VARCHAR" property="estimateCost"/>
	<result column="HANGUP_STATUS" jdbcType="VARCHAR" property="hangupStatus"/>
	<result column="HANGUP_DATE" jdbcType="DATE" property="hangupDate"/>
	<result column="CHANGE_COUNT" jdbcType="TINYINT" property="changeCount"/>
	<result column="REQUIREMENT_PROPERTY" jdbcType="VARCHAR" property="requirementProperty"/>
	<result column="REQUIREMENT_CLASSIFY" jdbcType="VARCHAR" property="requirementClassify"/>
	<result column="REQUIREMENT_SUBDIVISION" jdbcType="VARCHAR" property="requirementSubdivision"/>
	<result column="ACCEPTANCE_DESCRIPTION" jdbcType="VARCHAR" property="acceptanceDescription"/>
	<result column="ACCEPTANCE_TIMELINESS" jdbcType="VARCHAR" property="acceptanceTimeliness"/>
	<result column="DATA_MIGRATION_STATUS" jdbcType="VARCHAR" property="dataMigrationStatus"/>
	<result column="WORKLOAD" jdbcType="DOUBLE" property="workload"/>
	<!-- <result column="PARENT_ID" jdbcType="BIGINT" property="parentId"/>
	<result column="PARENT_IDS" jdbcType="VARCHAR" property="parentIds"/> -->
	<result column="STATUS" jdbcType="TINYINT" property="status"/>
	<result column="CREATE_BY" jdbcType="BIGINT" property="createBy"/>
	<result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
	<result column="LAST_UPDATE_BY" jdbcType="BIGINT" property="lastUpdateBy"/>
	<result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate"/>
  </resultMap>
  <sql id="Base_Column_List">
    tri.ID, REQUIREMENT_NAME, REQUIREMENT_CODE, REQUIREMENT_STATUS, REQUIREMENT_SOURCE, REQUIREMENT_TYPE,
    APPLY_USER_ID,APPLY_DEPT_ID,REQUIREMENT_OVERVIEW,PARENT_ID,PARENT_IDS, tri.STATUS, tri.CREATE_BY, tri.CREATE_DATE, 
    tri.LAST_UPDATE_BY, tri.LAST_UPDATE_DATE
  </sql>
  
  <sql id="Base_Column_List1">
    ID,REQUIREMENT_NAME,REQUIREMENT_CODE,REQUIREMENT_STATUS,REQUIREMENT_SOURCE,REQUIREMENT_TYPE,APPLY_USER_ID,
	APPLY_DEPT_ID,DEVELOPMENT_MANAGE_USER_ID,DEVELOPMENT_DEPT_ID,REQUIREMENT_MANAGE_USER_ID,REQUIREMENT_ACCEPTANCE_USER_ID,
	REQUIREMENT_OVERVIEW,REQUIREMENT_PRIORITY,REQUIREMENT_PLAN,EXPECT_ONLINE_DATE,PLAN_ONLINE_DATE,ACTUAL_ONLINE_DATE,
	PLAN_INTEGRATION_TEST_DATE,ACTUAL_INTEGRATION_TEST_DATE,OPEN_DATE,IMPORTANT_REQUIREMENT_STATUS,IMPORTANT_REQUIREMENT_DELAY_STATUS,
	IMPORTANT_REQUIREMENT_TYPE,IMPORTANT_REQUIREMENT_ONLINE_QUARTER,IMPORTANT_REQUIREMENT_DELAY_REASON,DIRECT_INCOME,FORWARD_INCOME,
	RECESSIVE_INCOME,DIRECT_COST_REDUCTION,FORWARD_COST_REDUCTION,ANTICIPATED_INCOME,ESTIMATE_COST,HANGUP_STATUS,HANGUP_DATE,
	CHANGE_COUNT,REQUIREMENT_PROPERTY,REQUIREMENT_CLASSIFY,REQUIREMENT_SUBDIVISION,ACCEPTANCE_DESCRIPTION,ACCEPTANCE_TIMELINESS,
	DATA_MIGRATION_STATUS,WORKLOAD,PARENT_ID,PARENT_IDS,STATUS,CREATE_BY,CREATE_DATE,LAST_UPDATE_BY,LAST_UPDATE_DATE
  </sql>
  <!-- 获取该需求所在系统所在项目的项目管理岗 ztt -->
  <select id="getProManageUserIds" parameterType="Long" resultType="String">
  	SELECT GROUP_CONCAT(DISTINCT tpgu.USER_ID)
	FROM tbl_project_group_user tpgu
	LEFT JOIN tbl_project_group tpg ON tpg.ID = tpgu.PROJECT_GROUP_ID AND tpg.STATUS  =1
	LEFT JOIN tbl_project_info tpi ON tpi.ID = tpg.PROJECT_ID AND tpi.STATUS = 1
	LEFT JOIN tbl_project_system tps ON tps.PROJECT_ID = tpi.ID AND tps.STATUS =1
	LEFT JOIN tbl_requirement_system trs ON trs.SYSTEM_ID = tps.SYSTEM_ID AND trs.status = 1
	LEFT JOIN tbl_requirement_info tri ON tri.ID = trs.REQUIREMENT_ID AND tri.STATUS =1
	WHERE trs.REQUIREMENT_ID = #{requirementId} AND tpgu.USER_POST = 1 AND tpgu.STATUS = 1
  </select>
  <select id="getReqName" parameterType="Long" resultType="String">
  	select REQUIREMENT_CODE
  	from tbl_requirement_info
  	where ID = #{id} and STATUS = 1
  </select>
  <!-- 获取所有需求无条件 -->
  <select id="getAllRequirement" resultType="cn.pioneeruniverse.dev.entity.TblRequirementInfo">
   SELECT 
    requirement.ID id,requirement.REQUIREMENT_NAME requirementName
    FROM tbl_requirement_info requirement
    WHERE STATUS = 1 
  </select>
 
  <select id="findRequirementByUser" parameterType="java.lang.Long" resultMap="BaseResultMap">		 
  	SELECT REQUIREMENT_CODE,REQUIREMENT_STATUS from TBL_DEV_TASK tdt 
  	INNER JOIN TBL_REQUIREMENT_FEATURE trf ON tdt.REQUIREMENT_FEATURE_ID=trf.ID 
  	INNER JOIN tbl_requirement_info tri ON trf.REQUIREMENT_ID=tri.ID
	WHERE tdt.STATUS=1 AND trf.STATUS=1 AND tri.STATUS=1<!-- DEV_TASK_STATUS &lt;3 and  --> AND tdt.DEV_USER_ID=#{userId}  
	GROUP BY REQUIREMENT_CODE,REQUIREMENT_STATUS
  </select>

	<!-- 条件获取需求 -->
  <select id="getRequirement" parameterType="cn.pioneeruniverse.dev.entity.TblRequirementInfo" resultMap="BaseResultMap">
  SELECT requirement.id,REQUIREMENT_NAME,REQUIREMENT_CODE,REQUIREMENT_TYPE from tbl_requirement_info requirement
	<where>
	<if test="requirementName != null and requirementName!=''">
        and REQUIREMENT_NAME LIKE CONCAT('%',#{requirementName},'%')
     </if>
     <if test="requirementCode != null and requirementCode!=''">
        and REQUIREMENT_CODE LIKE CONCAT('%',#{requirementCode},'%')
     </if>
      <if test="requirementType != null">
		AND REQUIREMENT_TYPE in
		<foreach item="item" index="index" collection="requirementTypeList" open="(" separator="," close=")">
				#{item}
		</foreach>
	  </if>
	</where> 
  </select>

	<!--根据需求id 查询需求-->
  <select id="findRequirementById" parameterType="Long" resultMap="BaseResultMap">
   	SELECT tri.REQUIREMENT_NAME,tri.REQUIREMENT_CODE FROM tbl_requirement_info tri
    WHERE STATUS = 1 AND tri.ID=#{reqId}
  </select>

	<!--根据需求编号查询需求-->
  <select id="findRequirementByCode" parameterType="String" resultMap="BaseResultMap">
   	SELECT tri.ID,tri.REQUIREMENT_NAME,tri.REQUIREMENT_CODE FROM tbl_requirement_info tri
    WHERE STATUS = 1 AND tri.REQUIREMENT_CODE=#{reqCode}
  </select>

	<!-- 根据 开发任务id 批量查询需求-->
  <select id="findRequirementByFeatureIds" parameterType="Long" resultMap="BaseResultMap">
   	SELECT tri.ID,tri.REQUIREMENT_NAME,tri.REQUIREMENT_CODE FROM tbl_requirement_info tri
   	LEFT JOIN tbl_requirement_feature trf ON trf.REQUIREMENT_ID=tri.ID AND trf.STATUS=1
    WHERE tri.STATUS = 1 AND trf.ID IN
    <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
	</foreach>
	GROUP BY tri.ID
  </select>
  
  
</mapper>