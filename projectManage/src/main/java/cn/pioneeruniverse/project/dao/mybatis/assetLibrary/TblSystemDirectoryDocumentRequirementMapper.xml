<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.pioneeruniverse.project.dao.mybatis.assetLibrary.TblSystemDirectoryDocumentRequirementMapper">
  <resultMap id="BaseResultMap" type="cn.pioneeruniverse.project.entity.TblSystemDirectoryDocumentRequirement">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="SYSTEM_DIRECTORY_DOCUMENT_ID" jdbcType="BIGINT" property="systemDirectoryDocumentId" />
    <result column="REQUIREMENT_ID" jdbcType="BIGINT" property="requirementId" />
    <result column="DOCUMENT_VERSION" jdbcType="INTEGER" property="documentVersion" />
    <result column="REQUIREMENT_CODE" jdbcType="VARCHAR" property="requirementCode" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, SYSTEM_DIRECTORY_DOCUMENT_ID, REQUIREMENT_CODE , DOCUMENT_VERSION
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_system_directory_document_requirement
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_system_directory_document_requirement
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertDocumentRequirement"
          parameterType="cn.pioneeruniverse.project.entity.TblSystemDirectoryDocumentRequirement">
    insert into tbl_system_directory_document_requirement(
      SYSTEM_DIRECTORY_DOCUMENT_ID,
      REQUIREMENT_CODE,
      DOCUMENT_VERSION,
      UPDATE_USER_ID,
      UPDATE_TIME
    )values (
      #{systemDirectoryDocumentId,jdbcType=BIGINT},
      #{requirementCode,jdbcType=VARCHAR},
      #{documentVersion,jdbcType=INTEGER},
      #{updateUserId,jdbcType=BIGINT},
      #{updateTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.pioneeruniverse.project.entity.TblSystemDirectoryDocumentRequirement">
    update tbl_system_directory_document_requirement
    <set>
      <if test="systemDirectoryDocumentId != null">
        SYSTEM_DIRECTORY_DOCUMENT_ID = #{systemDirectoryDocumentId,jdbcType=BIGINT},
      </if>
      <if test="requirementId != null">
        REQUIREMENT_ID = #{requirementId,jdbcType=BIGINT},
      </if>
      <if test="documentVersion != null">
        DOCUMENT_VERSION = #{documentVersion,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.pioneeruniverse.project.entity.TblSystemDirectoryDocumentRequirement">
    update tbl_system_directory_document_requirement
    set SYSTEM_DIRECTORY_DOCUMENT_ID = #{systemDirectoryDocumentId,jdbcType=BIGINT},
      REQUIREMENT_ID = #{requirementId,jdbcType=BIGINT},
      DOCUMENT_VERSION = #{documentVersion,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <!--liushan:根据系统目录文档表ID 和 文档版本 查询需求信息-->
  <select id="getSystemRequirementBySystemDirDocIdAndVersion" resultType="cn.pioneeruniverse.project.entity.TblRequirementInfo">
    SELECT
      a.REQUIREMENT_CODE AS requirementCode,
      a.REQUIREMENT_NAME AS requirementName
    FROM
    tbl_requirement_info a,
    (
      SELECT DISTINCT
      REQUIREMENT_CODE
      FROM
      tbl_system_directory_document_requirement
      WHERE
      SYSTEM_DIRECTORY_DOCUMENT_ID = #{systemDirectoryDocumentId}
      AND DOCUMENT_VERSION = #{documentVersion}
    ) b
    WHERE
      a.REQUIREMENT_CODE = b.REQUIREMENT_CODE
  </select>

  <!--liushan:根据系统目录文档表ID 和 需求表ID 查询出最小的版本号-->
  <select id="getMinVersion" resultType="java.lang.Long">
      SELECT
	    min(DOCUMENT_VERSION)
      FROM
          tbl_system_directory_document_requirement
      WHERE
        SYSTEM_DIRECTORY_DOCUMENT_ID = #{systemDirectoryDocumentId}
        AND REQUIREMENT_CODE = #{requirementCode}
  </select>
</mapper>
